# modify config.yml
#
# edited inline as config.yml file can change
# between versions.
---

- name: Set steamcmd username
  ansible.builtin.lineinfile:
    dest: "{{ acmanager_path }}/config.yml"
    state: present
    regexp: '^  username: foobar'
    line: '  username: {{ steamcmd_user }}'

- name: Set steamcmd password
  ansible.builtin.lineinfile:
    dest: "{{ acmanager_path }}/config.yml"
    state: present
    regexp: '^  password: hunter2'
    line: '  password: {{ steamcmd_password }}'

- name: Set acserver path
  ansible.builtin.lineinfile:
    dest: "{{ acmanager_path }}/config.yml"
    state: present
    regexp: '^  install_path: assetto'
    line: '  install_path: {{ acserver_path }}'

- name: Set steamcmd force update to "{{ steamcmd_force_update }}"
  ansible.builtin.lineinfile:
    dest: "{{ acmanager_path }}/config.yml"
    state: present
    regexp: '^  force_update: false'
    line: '  force_update: {{ steamcmd_force_update }}'

- name: Set hostname
  ansible.builtin.lineinfile:
    dest: "{{ acmanager_path }}/config.yml"
    state: present
    regexp: '^  hostname: '
    line: '  hostname: {{ http_hostname }}'

- name: Set http session key
  ansible.builtin.lineinfile:
    dest: "{{ acmanager_path }}/config.yml"
    state: present
    regexp: '^  session_key: '
    line: '  session_key: {{ httpSessionKey }}'

- name: Set server manager base URL https
  ansible.builtin.lineinfile:
    dest: "{{ acmanager_path }}/config.yml"
    state: present
    regexp: '^  server_manager_base_URL:'
    line: '  server_manager_base_URL: https://{{ site_fqdn }}'
  when: cert_enabled

- name: Set server manager base URL http
  ansible.builtin.lineinfile:
    dest: "{{ acmanager_path }}/config.yml"
    state: present
    regexp: '^  server_manager_base_URL:'
    line: '  server_manager_base_URL: http://{{ site_fqdn }}'
  when: not cert_enabled

- name: set session store type
  ansible.builtin.lineinfile:
    dest: "{{ acmanager_path }}/config.yml"
    state: present
    regexp: '^  session_store_type: '
    line: '  session_store_type: {{ session_store_type }}'

- name: set session store path
  ansible.builtin.lineinfile:
    dest: "{{ acmanager_path }}/config.yml"
    state: present
    regexp: '^  session_store_path: '
    line: '  session_store_path: {{ session_store_path }}'

- name: set csrf protection to "{{ csrf_protection }}"
  ansible.builtin.lineinfile:
    dest: "{{ acmanager_path }}/config.yml"
    state: present
    regexp: '^  csrf_protection: '
    line: '  csrf_protection: {{ csrf_protection }}'

- name: set session session max age
  ansible.builtin.lineinfile:
    dest: "{{ acmanager_path }}/config.yml"
    state: present
    regexp: '^  # session_max_age: '
    line: '  session_max_age: {{ session_max_age }}'

- name: set TLS to "{{ acsm_tls_enabled }}"
  ansible.builtin.replace:
    path: "{{ acmanager_path }}/config.yml"
    regexp: 'listen on port 443.\n    enabled: false'
    replace: 'listen on port 443.\n    enabled: {{ acsm_tls_enabled }}'

- name: set TLS cert_path
  ansible.builtin.lineinfile:
    dest: "{{ acmanager_path }}/config.yml"
    state: present
    regexp: '^    cert_path:'
    line: '    cert_path: {{ acsm_cert_path }}'

- name: set TLS key_path
  ansible.builtin.lineinfile:
    dest: "{{ acmanager_path }}/config.yml"
    state: present
    regexp: '^    key_path:'
    line: '    key_path: {{ acsm_key_path }}'

- name: set monitoring to "{{ acmanager_monitoring }}"
  ansible.builtin.replace:
    path: "{{ acmanager_path }}/config.yml"
    regexp: '(^monitoring:\n  enabled: true)'
    replace: 'monitoring:\n  enabled: {{ acmanager_monitoring }}'

- name: set Store Type to "{{ store_type }}"
  ansible.builtin.lineinfile:
    dest: "{{ acmanager_path }}/config.yml"
    state: present
    regexp: '^  type: '
    line: '  type: {{ store_type }}'

- name: set Store Path to "{{ store_path }}"
  ansible.builtin.lineinfile:
    dest: "{{ acmanager_path }}/config.yml"
    state: present
    regexp: '^  path: '
    line: '  path: {{ store_path }}'

- name: set Store Shared Data Path to " {{ shared_data_path }}"
  ansible.builtin.lineinfile:
    dest: "{{ acmanager_path }}/config.yml"
    state: present
    regexp: '^  shared_data_path:'
    line: '  shared_data_path: {{ shared_data_path }}'

- name: set Store Scheduled Event Check Loop to " {{ scheduled_event_check_loop }}"
  ansible.builtin.lineinfile:
    dest: "{{ acmanager_path }}/config.yml"
    state: present
    regexp: '^  scheduled_event_check_loop:'
    line: '  scheduled_event_check_loop: {{ scheduled_event_check_loop }}'

- name: check for old store.json directory
  ansible.builtin.stat:
    path: "{{ acmanager_path }}/store.json"
  register: store_json_path

- name: move store.json files to new "{{ store_path }}"
  ansible.builtin.copy:
    remote_src: true
    src: "{{ acmanager_path }}/store.json/"
    dest: "{{ store_path }}/"
    owner: "{{ assettouser }}"
    group: "{{ assettogroup }}"
  when: store_json_path.stat.exists

- name: remove old store.json directory
  ansible.builtin.file:
    path: "{{ acmanager_path }}/store.json"
    state: absent
  when: store_json_path.stat.exists

- name: check if admin account has been setup or if this is a new install
  ansible.builtin.stat:
    path: "{{ store_path }}/accounts/admin.json"
  register: admin_account

- name: debug admin account check
  ansible.builtin.debug:
    msg: "Admin account check {{ admin_account }}"
  when: verbose

- name: Set admin_password_override in acmanager config.yml if new install
  ansible.builtin.lineinfile:
    dest: "{{ acmanager_path }}/config.yml"
    state: present
    regexp: '^  admin_password_override:$'
    line: '  admin_password_override: {{ admin_password_override }}'
  when: admin_account.stat.exists and admin_pw_reset

- name: Set live map refresh interval to "{{ map_refresh_ms }}"ms
  ansible.builtin.lineinfile:
    dest: "{{ acmanager_path }}/config.yml"
    state: present
    regexp: '^  refresh_interval_ms:'
    line: '  refresh_interval_ms: {{ map_refresh_ms }}'

- name: Set Disable Plugins to "{{ disable_plugins }}"
  ansible.builtin.lineinfile:
    dest: "{{ acmanager_path }}/config.yml"
    state: present
    regexp: '^  disable_plugins:'
    line: '  disable_plugins: {{ disable_plugins }}'

- name: Set Performance Mode to "{{ performance_mode }}"
  ansible.builtin.lineinfile:
    dest: "{{ acmanager_path }}/config.yml"
    state: present
    regexp: '^  performance_mode:'
    line: '  performance_mode: {{ performance_mode }}'

- name: Set scan content folder to "{{ scan_content_folder }}"
  ansible.builtin.lineinfile:
    dest: "{{ acmanager_path }}/config.yml"
    state: present
    regexp: '^  scan_content_folder_for_changes:'
    line: '  scan_content_folder_for_changes: {{ scan_content_folder }}'

- name: Set Persist Session Results to "{{ persist_session_results }}"
  ansible.builtin.lineinfile:
    dest: "{{ acmanager_path }}/config.yml"
    state: present
    regexp: '^  persist_mid_session_results:'
    line: '  persist_mid_session_results: {{ persist_session_results }}'

- name: Set index laps to "{{ index_laps }}"
  ansible.builtin.lineinfile:
    dest: "{{ acmanager_path }}/config.yml"
    state: present
    regexp: '^    index_laps:'
    line: '    index_laps: {{ index_laps }}'

- name: Set index crashes to "{{ index_crashes }}"
  ansible.builtin.lineinfile:
    dest: "{{ acmanager_path }}/config.yml"
    state: present
    regexp: '^    index_crashes:'
    line: '    index_crashes: {{ index_crashes }}'

- name: Set Recaptcha Site Key
  ansible.builtin.lineinfile:
    dest: "{{ acmanager_path }}/config.yml"
    state: present
    regexp: '^    site_key:'
    line: '    site_key: {{ acmanagerRecaptchaSiteKey }}'

- name: Set Recaptcha Secret Key
  ansible.builtin.lineinfile:
    dest: "{{ acmanager_path }}/config.yml"
    state: present
    regexp: '^    secret_key:'
    line: '    secret_key: {{ acmanagerRecaptchaSecretKey }}'

- name: Set Lua enabled to "{{ lua_enabled }}"
  ansible.builtin.replace:
    path: "{{ acmanager_path }}/config.yml"
    regexp: '(  # folder to see some examples!\n  enabled: false)'
    replace: '  # folder to see some examples!\n  enabled: {{ lua_enabled }}'
