# install acmanager
---
- name: create isolation user and group. Enable linger
  ansible.builtin.include_role:
    name: common
    tasks_from: create_user.yml
  vars:
    user: "{{ assetto_user }}"
    uid: "{{ assetto_uid }}"
    group: "{{ assetto_group }}"
    gid: "{{ assetto_gid }}"
    comment: "{{ app_name }} app account"

- name: install authorized key for backup script
  ansible.posix.authorized_key:
    user: "{{ assetto_user }}"
    state: present
    key: "{{ lookup('file', backup_pub_key) }}"

- name: add firewall ports
  ansible.builtin.import_tasks: firewalld.yml

- name: create ACSM path "{{ acmanager_path }}"
  ansible.builtin.file:
    path: "{{ acmanager_path }}"
    state: directory
    owner: "{{ assetto_user }}"
    group: "{{ assetto_group }}"
    mode: '0755'
  register: acmanager_path_state

- name: install nginx configs
  ansible.builtin.import_tasks: nginx.yml

- name: setup backups and backup existing install if not new
  ansible.builtin.import_tasks: backup.yml

- name: install or update ACSM
  ansible.builtin.import_tasks: install.yml

- name: set acsm config.yml
  ansible.builtin.import_tasks: config.yml

- name: set servers.yml count to "{{ server_count }}"
  ansible.builtin.lineinfile:
    dest: "{{ acmanager_path }}/servers.yml"
    regexp: '^servers: '
    line: 'servers: {{ server_count }}'

- name: start ACSM to generate files and paths
  ansible.builtin.systemd:
    name: "{{ systemd_single }}"
    daemon_reload: true
    state: started

- name: wait for server-manager to settle
  ansible.builtin.uri:
    url: "http://127.0.0.1:8772/login"
    status_code: 200
  register: result
  until: result.status == 200
  retries: 720  # 720 * 5 = 1 hour
  delay: 5

- name: stop ACSM to add custom options
  ansible.builtin.systemd:
    name: "{{ systemd_single }}"
    daemon_reload: true
    state: stopped

- name: start multi ACSM to generate files and paths
  ansible.builtin.systemd:
    name: "{{ systemd_multi }}"
    daemon_reload: true
    state: started
  when: server_count > 1

- name: wait for server-manager to settle
  ansible.builtin.uri:
    url: "http://127.0.0.1:8772/login"
    status_code: 200
  register: result
  until: result.status == 200
  retries: 720  # 720 * 5 = 1 hour
  delay: 5
  when: server_count > 1

- name: stop ACSM to add custom options
  ansible.builtin.systemd:
    name: "{{ systemd_multi }}"
    daemon_reload: true
    state: stopped
  when: server_count > 1

- name: add custom server messages
  ansible.builtin.import_tasks: messages.yml
  when: acmanager_path_state.changed

- name: add settings in server options
  ansible.builtin.import_tasks: server_options.yml

- name: insert custom CSS
  ansible.builtin.import_tasks: css_mods.yml

- name: update multi-server options
  ansible.builtin.import_tasks: multi-options.yml
  when: server_count > 1

- name: restart acsm multi
  ansible.builtin.debug:
    msg: 'restart acsm multi'
  changed_when: true
  notify: restart acsm multi
  when: server_count > 1

- name: restart acsm single
  ansible.builtin.debug:
    msg: 'restart acsm'
  changed_when: true
  notify: restart acsm
  when: server_count == 1
