# install acsm

---

- name: create ACSM path "{{ acmanagerPath }}"
  ansible.builtin.file:
    path: "{{ acmanagerPath }}"
    state: directory
    owner: "{{ assettouser }}"
    group: "{{ assettogroup }}"
    mode: '0755'
  register: acmanager_path

- name: create backup directory
  ansible.builtin.file:
    path: "{{ backup_path }}"
    state: directory
    owner: "{{ assettouser }}"
    group: "{{ assettogroup }}"
    mode: '0750'

###

- name: add helper script for version tracking
  ansible.builtin.template:
    src: get_version.sh.j2
    dest: "{{ acmanagerPath }}/get_version.sh"
    owner: "{{ assettouser }}"
    group: "{{ assettogroup }}"
    mode: '0740'

- name: add helper script for backups
  ansible.builtin.template:
    src: daily_backup.sh.j2
    dest: "{{ acmanagerPath }}/daily_backup.sh"
    owner: "{{ assettouser }}"
    group: "{{ assettogroup }}"
    mode: '0740'

- name: create daily backup acsm log file
  ansible.builtin.file:
    state: touch
    path: /var/log/daily_backup_acsm.log
    owner: "{{ assettouser }}"
    group: "{{ assettogroup }}"
    mode: '0644'

- name: add cron job for backup script
  become_user: "{{ assettouser }}"
  ansible.builtin.cron:
    name: twice daily acsm backup
    minute: "15"
    hour: "{{ backup_hours }}"
    job: "{{ acmanagerPath }}/daily_backup.sh >> /var/log/daily_backup_acsm.log 2>&1"

- name: get latest available version of ACSM for x86_64
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: "{{ acmanagerPath }}"
    owner: "{{ assettouser }}"
    group: "{{ assettogroup }}"
    mode: '0640'
  with_fileglob: "{{ acmanagerZip }}"
  when: ansible_architecture == 'x86_64'
  register: acsm_zip_x86

- name: get latest available version of ACSM for ARM32
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: "{{ acmanagerPath }}"
    owner: "{{ assettouser }}"
    group: "{{ assettogroup }}"
    mode: '0640'
  with_fileglob: "{{ acmanagerZip }}"
  when: ansible_architecture == 'arm32'
  register: acsm_zip_arm32

###

- name: run script to get installed version of acsm
  ansible.builtin.command: '{{ acmanagerPath }}/get_version.sh'
  register: acsm_version
  when: acsm_zip_x86.changed or acsm_zip_arm32.changed

- name: output of version script
  ansible.builtin.debug:
    msg: 'Current version installed is: {{ acsm_version.stdout }}'
  when: verbose and (acsm_zip_x86.changed or acsm_zip_arm32.changed)

###

- name: backup installed verison before upgrading
  import_tasks: backup.yml
  when: acsm_zip_x86.changed or acsm_zip_arm32.changed

###

- name: install newer AC Server Manager x86
  ansible.builtin.unarchive:
    src: "{{ item }}"
    dest: "{{ acmanagerPath }}"
    owner: "{{ assettouser }}"
    group: "{{ assettogroup }}"
    mode: '0755'
  with_fileglob: "{{ acmanagerZip }}"
  when: acsm_zip_x86.changed and ansible_architecture == 'x86_64'

- name: install newer AC Server Manager arm32
  ansible.builtin.unarchive:
    src: "{{ item }}"
    dest: "{{ acmanagerPath }}"
    owner: "{{ assettouser }}"
    group: "{{ assettogroup }}"
    mode: '0755'
  with_fileglob: "{{ acmanagerZipArm32 }}"
  when: acsm_zip_arm32.changed and ansible_architecture == 'arm32'

- name: add ACSM License
  ansible.builtin.unarchive:
    src: "{{ files_server }}/{{ acsm_license }}"
    dest: "{{ acmanagerPath }}"
    owner: "{{ assettouser }}"
    group: "{{ assettogroup }}"
    mode: '0600'
    remote_src: true
