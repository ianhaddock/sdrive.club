# install acserver with steamcmd cli
---
- name: create "{{ acserver_path }}"
  ansible.builtin.file:
    path: "{{ acserver_path }}"
    state: directory
    owner: "{{ assetto_user }}"
    group: "{{ assetto_group }}"
    mode: '0755'
  register: acserver_path_check

- name: add acserver steamcmd script
  ansible.builtin.template:
    src: acserver_install_script.txt.j2
    dest: "/home/{{ assetto_user }}/acserver_install_script.txt"
    owner: "{{ assetto_user }}"
    group: "{{ assetto_group }}"
    mode: '0640'
  when: acserver_path_check.changed

- name: install acServer with steamcmd script
  become_user: "{{ assetto_user }}"
  ansible.builtin.command:
    cmd: '/usr/local/sbin/steamcmd.sh +@sSteamCmdForcePlatformType windows +runscript /home/{{ assetto_user }}/acserver_install_script.txt'
  register: steam_install
  when: acserver_path_check.changed

- name: debug
  ansible.builtin.debug:
    msg: 'debug {{ steam_install }}'
  when: verbose

- name: insert motd message for single server
  ansible.builtin.template:
    src: motd.j2
    dest: "{{ acserver_path }}/motd.txt"
    owner: "{{ assetto_user }}"
    group: "{{ assetto_group }}"
    mode: '0644'

- name: check if AC multi manager is installed
  ansible.builtin.stat:
    path: "{{ acmanager_path }}/servers/SERVER_00/" #store.json/server_options.json"
  register: acmm_installed

- name: insert motd message for multi servers
  ansible.builtin.template:
    src: motd.j2
    dest: "{{ acmanager_path }}/servers/SERVER_{{ item }}/assetto/motd.txt"
    owner: "{{ assetto_user }}"
    group: "{{ assetto_group }}"
    mode: '0644'
  with_sequence: start=0 end={{ server_count -1 }} format=%02x
  when: server_count > 1 and acmm_installed.stat.exists
