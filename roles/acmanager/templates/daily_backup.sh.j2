#!/bin/bash -e

# # #
#
# v20230715: v2 rewrite
#
# Added by Ansible {{ ansible_date_time.date }}
#
# # #

function usage() {
  echo "";
  echo "Backup ACSM game server files excluding license files."
  echo "Requires get_version.sh script to run.";
  echo "";
  echo " -h: This help menu.";
  echo "";
}

destination="{{ backup_path }}"
acserver="{{ acserverPath }}"
acmanager="{{ acmanagerPath }}"
accontent="{{ acserverPath }}/content"
datestamp="$(date +%Y%m%d)"
PIDFILE=/tmp/acsm_backup.PID
used_space="$(df -k / | tail -n1 | awk '{print $5}' | sed 's/%//g')"

# sanity checks
version="$(/usr/local/sbin/acmanager/get_version.sh)"
if [ $? != 0 ]; then
    usage;
    echo "$(date +%Y%m%d:%H%M%S): Script requries get_version.sh to run. Exiting.";
    exit 1;
elif [ $used_space -gt 79 ]; then
    usage;
    echo "$(date +%Y%m%d:%H%M%S): Exiting. Not enough space available, over $used_space% full";
    exit 1;
elif [ -f $PIDFILE ]; then
    echo "WARNING: acsm_backup script already running. Exiting.";
    exit 0;
fi

trap 'rm -f $PIDFILE' EXIT
echo $$ > $PIDFILE

# compress files
echo "$(date +%Y%m%d:%H%M%S): Starting backup."

zip -y -r {{ backup_path }}/"$version"_"$datestamp".zip \
    "$acmanager" "$acserver" -x "$accontent"/\* -x \*.License \
    -x \*.zip -li -lf {{ backup_path }}/"$version"_"$datestamp".log

zip -y -r {{ backup_path }}/acsm_content.zip \
    {{ acserverPath }}/content

zip -y -r {{ backup_path }}/acsm_shared_data.zip \
    {{ acmanagerPath }}/shared_data


# exit
echo "$(date +%Y%m%d:%H%M%S): Backup complete. Exiting"
rm -f "$PIDFILE";
exit 0;
