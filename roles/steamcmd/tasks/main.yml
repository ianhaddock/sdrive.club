# install steamcmd cli
---
- name: create isolation user and group. Enable linger
  ansible.builtin.include_role:
    name: common
    tasks_from: create_user.yml
  vars:
    user: "{{ steam_user }}"
    uid: "{{ steam_uid }}"
    group: "{{ steam_group }}"
    gid: "{{ steam_gid }}"
    comment: "steam app account"

- name: create "{{ steamcmd_path }}"
  ansible.builtin.file:
    path: "{{ steamcmd_path }}"
    state: directory
    owner: "{{ steam_user }}"
    group: "{{ steam_group }}"
    mode: '0755'
  register: steamcmd_path_check

- name: install glibc.i686, libstdc++.i686 dependencies
  ansible.builtin.package:
    name:
      - glibc.i686
      - libstdc++.i686
    state: present

- name: pull steamcmd_linux.tar.gz
  ansible.builtin.unarchive:
    src: 'https://steamcdn-a.akamaihd.net/client/installer/steamcmd_linux.tar.gz'
    dest: "{{ steamcmd_path }}"
    owner: "{{ steam_user }}"
    group: "{{ steam_group }}"
    remote_src: true
  when: steamcmd_path_check.changed

- name: symlink linux32 folder
  ansible.builtin.file:
    src: "{{ steamcmd_path }}/linux32"
    dest: "/usr/local/sbin/linux32"
    owner: "{{ steam_user }}"
    group: "{{ steam_group }}"
    state: link

- name: symlink steamcmd.sh
  ansible.builtin.file:
    src: "{{ steamcmd_path }}/steamcmd.sh"
    dest: "/usr/local/sbin/steamcmd.sh"
    owner: "{{ steam_user }}"
    group: "{{ steam_group }}"
    state: link

- name: install steamcmd script
  ansible.builtin.template:
    src: steamcmd_script.txt.j2
    dest: "{{ steamcmd_path }}/steamcmd_script.txt"
    owner: "{{ steam_user }}"
    group: "{{ steam_group }}"
    mode: '0640'

- name: update steamcmd
  become_user: "{{ steam_user }}"
  ansible.builtin.command:
    cmd: '/usr/local/sbin/steamcmd.sh +@sSteamCmdForcePlatformType \
      windows +runscript /usr/local/sbin/steamcmd/steamcmd_script.txt'
  when: steamcmd_path_check.changed
  register: steam_out

- name: debug steam update
  ansible.builtin.debug:
    msg: 'Steam update output = {{ steam_out }}'
  when: verbose
