# simview main.yml
---
- name: create isolation user and group. Enable linger
  ansible.builtin.include_role:
    name: common
    tasks_from: create_user.yml
  vars:
    user: "{{ app_user }}"
    uid: "{{ app_uid }}"
    group: "{{ app_group }}"
    gid: "{{ app_gid }}"
    comment: "{{ app_name }} app account"

- name: create app path "{{ app_path }}"
  ansible.builtin.file:
    path: "{{ app_path }}"
    state: directory
    owner: "{{ assetto_user }}"
    group: "{{ assetto_group }}"
    mode: '0755'
  register: simview_path_state

- name: install simview
  ansible.builtin.import_tasks: install.yml
  when: simview_path_state.changed

- name: config mariadb
  ansible.builtin.import_tasks: mariadb.yml
  when: simview_path_state.changed

# - name: insert config.toml for single server setup

- name: add simview directory
  ansible.builtin.file:
    path: "{{ acmanager_path }}/servers/SERVER_{{ item }}/assetto/simview"
    state: directory
    owner: "{{ assetto_user }}"
    group: "{{ assetto_group }}"
  with_sequence: start=0 end={{ server_count -1 }} format=%02x

- name: insert config.toml for multi servers
  ansible.builtin.template:
    src: config.toml.j2
    dest: "{{ acmanager_path }}/servers/SERVER_{{ item }}/assetto/simview/config.toml"
    owner: "{{ assetto_user }}"
    group: "{{ assetto_group }}"
    mode: '0644'
  with_sequence: start=0 end={{ server_count -1 }} format=%02x

- name: simlink SimViewWriter app to game lobbies
  ansible.builtin.file:
    src: "{{ app_path }}/bin/SimViewWriter"
    dest: "{{ acmanager_path }}/servers/SERVER_{{ item }}/assetto/simview/SimViewWriter"
    state: link
  with_sequence: start=0 end={{ server_count -1 }} format=%02x

    # - name: add simview plugin to acsm config.yml
    #   ansible.builtin.replace:
    #     path: "{{ acmanager_path }}/config.yml"
    #     regexp: '(^  plugins:\n    #)'
    #     replace: '  plugins:\n      - executable: assetto/simview/SimViewWriter\n        arguments: ["config.toml"]\n    #'

- name: open ports for websocket connection
  ansible.builtin.firewalld:
    port: "{{ simview_websocket_port_prefix}}{{ item }}/tcp"
    state: enabled
  with_sequence: start=0 end={{ server_count -1 }} format=%02x

- name: setup https reverse proxy
  ansible.builtin.include_role:
    name: base-nginx
    tasks_from: app_proxy.yml

- name: start "{{ systemd_multi }}"
  ansible.builtin.systemd:
    name: "{{ systemd_multi }}"
    daemon_reload: true
    state: restarted
